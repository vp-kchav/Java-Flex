<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   close="PopUpManager.removePopUp(this)"
			   updateComplete="init()">
	
	<fx:Script>
		<![CDATA[
			import com.vecteurplus.inventory.event.ProductEvent;
			import com.vecteurplus.inventory.event.StockEvent;
			import com.vecteurplus.inventory.model.Product;
			import com.vecteurplus.inventory.model.Stock;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			private var _proIdList:ArrayCollection;
			[Bindable]
			private var _selectedStock:Stock;
			private var _stock:Stock;
			
			public function set proIdList(proIds:ArrayCollection):void {
				_proIdList = proIds;
			}
			
			[Bindable]
			public function get proIdList():ArrayCollection {
				return _proIdList;
			}
			
			public function set selectedStock(stock:Stock):void {
				_selectedStock = stock;
			}
			
			public function get selectedStock():Stock {
				return _selectedStock;
			}
			
			public function set stock(st:Stock):void {
				_stock = st;
			}
			
			[Bindable]
			public function get stock():Stock {
				return _stock;
			}
			
			public function init():void {
				txtId.text = String(stock.id);
				cboProId.itemToLabel(String(stock.product.id));
				txtQty.text = String(stock.quantity);
				txtCode.text = stock.code;
			}
			
			public function getProById(id:int):Product {
				var productEvent:ProductEvent = new ProductEvent(ProductEvent.GET_SELECTED_PRODUCT);
				productEvent.productId = id;
				dispatchEvent(productEvent);
				return productEvent.product;
			}
			
			private function updateEvent(event:MouseEvent):void {
				var stock:Stock = new Stock();
				stock.code = txtCode.text;
				stock.quantity = int(txtQty.text);
				stock.product = getProById(cboProId.selectedIndex); 
				
				var stockEvent:StockEvent = new StockEvent(StockEvent.UPDATE_STOCK);
				stockEvent.stock = stock;
				dispatchEvent(stockEvent);
			}
			
			private function confirmDeleteEvent(event:MouseEvent):void {
				Alert.show('Are you sure you want to delete this product', null, 
					Alert.OK | Alert.CANCEL, this, deleteEvent, null, Alert.OK);  
			}
			
			private function deleteEvent(obj:CloseEvent):void {
				if(obj.detail == Alert.OK) {
					var stockEvent:StockEvent = new StockEvent(StockEvent.DELETE_STOCK);
					stockEvent.stock = selectedStock;
					dispatchEvent(stockEvent);
				}
			}
			
			private function closeEvent(event:MouseEvent):void {
				PopUpManager.removePopUp(this);
			}
			
		]]>
	</fx:Script>
	
	<mx:Form>
		<mx:FormHeading label="Stock Information Detail Form"/>
		<mx:FormItem label="Stock_Id">
			<s:TextInput id="txtId" width="150" editable="false"/>
		</mx:FormItem>
		
		<mx:FormItem label="Product_Id">
			<s:ComboBox id="cboProId" width="150" dataProvider="{proIdList}" change="getProById(cboProId.selectedIndex)"/>
		</mx:FormItem>
		
		<mx:FormItem label="Quantity">
			<s:TextInput id="txtQty" width="150" editable="true"/>
		</mx:FormItem>
		
		<mx:FormItem label="Stock_Code">
			<s:TextInput id="txtCode" width="150" editable="true"/>
		</mx:FormItem>
		
		<s:HGroup gap="10" paddingLeft="10" paddingRight="10" paddingTop="5" width="253" horizontalAlign="right">
			<s:Button id="btnClose" label="Close" click="closeEvent(event)"/>
			<s:Button id="btnUpdate" label="Update" click="updateEvent(event)"/>
			<s:Button id="btnDelete" label="Delete" click="confirmDeleteEvent(event)"/>
		</s:HGroup>
	</mx:Form>
</s:TitleWindow>